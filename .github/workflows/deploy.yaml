# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

env:
  BINARYEN_VERSION: 124

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: 'pnpm'

      - uses: rui314/setup-mold@v1

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: './rust -> ./rust/target'

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Install wasm-bindgen CLI
        run: |
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
          cargo binstall --force -y wasm-bindgen-cli

      # It seems Ubuntu's APT version doesn't work... (cf. #92)
      - name: Install binaryen
        run: |
          curl -L --proto '=https' --tlsv1.2 -sSf \
            "https://github.com/WebAssembly/binaryen/releases/download/version_${BINARYEN_VERSION}/binaryen-version_${BINARYEN_VERSION}-x86_64-linux.tar.gz" | \
            tar xvz -C ./binaryen binaryen-version_${BINARYEN_VERSION} --strip=1

      - name: Compile Rust crate into WebAssembly
        run: |
          # Compile Rust code
          cd rust
          cargo build --target wasm32-unknown-unknown --release -p ksj2gp-web
          cd ..

          # Generate bindings
          wasm-bindgen \
            --out-dir ./npm \
            --typescript \
            --target bundler \
            ./rust/target/wasm32-unknown-unknown/release/ksj2gp_web.wasm

          # Optimize the binary
          ./binaryen/bin/wasm-opt ./npm/ksj2gp_web_bg.wasm -O -o tmp.wasm
          # Compare sizes
          ls -lh ./npm/ksj2gp_web_bg.wasm tmp.wasm
          mv tmp.wasm ./npm/ksj2gp_web_bg.wasm

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm run build

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload dist folder
          path: './build'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
